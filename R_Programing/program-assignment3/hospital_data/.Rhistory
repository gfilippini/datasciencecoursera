source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
source('~/.active-rstudio-document')
data<-read_outcome()
setwd("C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/hospital_data")
data<-read_outcome()
source('~/.active-rstudio-document')
l<-c("TX","MD")
out<-lapply(l,hospitalrank , data=data, outcome=heart attack)
out<-lapply(l,hospitalrank , data=data, outcome="heart attack")
out
source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
out<-lapply(l,hospitalrank , data=data, outcome="heart attack")
out<-lapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out
?lapply
out<-lapply(l,hospitalrank , data=data, outcome="heart attack", num=1,simplity=T)
out<-sapply(l,hospitalrank , data=data, outcome="heart attack", num=10)
out
out<-lapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out
source('~/.active-rstudio-document')
out<-lapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out
out<-sapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out
out<-mapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out<-tapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out<-apply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out<-tapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out<-lapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
melt(out)
unlist(out)
out
cbind(rep(seq_along(l), times=sapply(l, length)), unlist(l))
cbind(rep(seq_along(out), times=sapply(out, length)), unlist(out))
out["Hospital.Name"]
out["TX"]
out[["Hospital.Name"]]
out[,"Hospital.Name"]
out["Hospital.Name",]
out<-sapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out
out<-lapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
do.call(cbind,out)
do.call(c,out)
do.call(rbind,out)
source('~/.active-rstudio-document')
out<-lapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out
source('~/.active-rstudio-document')
out<-lapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
out
source('~/.active-rstudio-document')
out<-lapply(l,hospitalrank , data=data, outcome="heart attack", num=1)
do.call(rbind,out)
x<-do.call(rbind,out)
x
source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
rankall("heart attack",20)
valid_state<-unique(data["State"])
out<-lapply(valid_states,hospitalrank,data=data,outcome="heart attack",num=20)
out<-lapply(valid_state,hospitalrank,data=data,outcome="heart attack",num=20)
head(out,10)
ranking<-do.call(rbind,out)
head(ranking,10)
View(valid_state)
state_l<-valid_state[,1]
valid_state<-unique(data["State",])
valid_state<-unique(data[,"State")
valid_state<-unique(data[,"State"])
source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
head(rankall("heart attack",20),10)
tail(rankall("pneumonia","worst"),3)
source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
out<-rankall("pneumonia",20)
out
View(out)
out<-sapply(l,hospitalrank,data=data,outcome="heart attack",20)
out
out<-sapply(state_l,hospitalrank,data=data,outcome="heart attack",20)
out
n<-lenth(out,"[[",1)
n<-length(out,"[[",1)
n<-length(out)
n<-length(out[[1]])
n<-length(out)
n
lapply(1:n,function(i) lapply(out,"[[",i))
cbind(out)
m<-do.call(rbind,out)
m
split(m,col(m))
m<-do.call(cbind,(out))
m
out
names(out)
do.call(rbind,out)
out<-lapply(l,hospitalrank,data=data,outcome="heart attack",20)
out
out<-lapply(state_l,hospitalrank,data=data,outcome="heart attack",20)
out
out<-sapply(state_l,hospitalrank,data=data,outcome="heart attack",20)
out
out["GU"]
out["GU",]
out[,"GU"]
out<-sapply(l,hospitalrank,data=data,outcome="heart attack",20)
out
out<-names(l)
out
out<-sapply(l,hospitalrank,data=data,outcome="heart attack",20)
names(out)<_l
names(out)<-l
out
out["TX"]
out["Hospital.Name"]
source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
out<-sapply(l,hospitalrank,data=data,outcome="heart attack",20)
out
names(out)
l<-(l,"AK")
l<-c(l,"AK")
out<-sapply(l,hospitalrank,data=data,outcome="heart attack",20)
out
?trasnpose
?transpose
t(out)
out
t<-out
t
t["TX"]
names(out)
t<-names(out)
t
t[,1]
t[1,]
t[1
]
t(t)
t(t(t))
t(t(out))
t<-colnames(out)
t
t<-rownames(out)
t
names(out)
h<-out
t(t(h))
?cbind
cbind(t(t(h)),t(t(t)))
cbind(t(t(h)),t(t(t)))
t(t(t))
t
t<-names(out)
cbind(t(t(h)),t(t(t)))
unlist(out)
state<-names(out)
data.frame(hospital=unlist(out),state=names(out),row.names=names(out))
source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
head(rankall("heart_attack",20),10)
head(rankall("heart attack",20),10)
source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
head(rankall("heart attack",20),10)
valid_states<-unique(data[,"State"])
## for each state, find the hospital of the given rank
rank<-sapply(valid_states,hospitalrank,data=data, outcome=outcome, num=num)
valid_states<-unique(data[,"State"])
## for each state, find the hospital of the given rank
rank<-sapply(valid_states,hospitalrank,data=data, outcome="heart attack", num=20)
head(rank,10)
out
out<-sapply(state_l,hospitalranr,data=data,outcome="heart attack",20)
out<-sapply(state_l,hospitalrank,data=data,outcome="heart attack",20)
out
out<-lapply(state_l,hospitalrank,data=data,outcome="heart attack",20)
out
data.frame(hospital=unlist(out),state=names(out),row.names=names(out))
out<-lapply(l,hospitalrank,data=data,outcome="heart attack",20)
out
out<-sapply(l,hospitalrank,data=data,outcome="heart attack",20)
out
data.frame(hospital=unlist(out),state=names(out),row.names=names(out))
out<-sapply(state_l,hospitalrank,data=data,outcome="heart attack",20)
out
data.frame(hospital=unlist(out),state=names(out),row.names=names(out))
source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
head(rankall("heart attack",20),10)
valid_state<-order(valid_state)
valid_state<-valid(state[order(valid_state)]
)
valid_state<-valid_state[order(valid_state)]
valid_state<-unique(data[,"State"])
valid_state<-valid_state[order(valid_state)]
source('C:/Users/Giuliano/datasciencecoursera/R_Programing/program-assignment3/rankall-prototype.R')
head(rankall("heart attack",20),10)
tail(rankall("pneumonia","worst"),3)
tail(rankall("heart failure"),10)
